// HALImplementationUnified.cpp: implementation file
//
// created by Unwinder
//////////////////////////////////////////////////////////////////////
#include "StdAfx.h"
#include "HALImplementationUnified.h"
//////////////////////////////////////////////////////////////////////
CHALImplementationUnified::CHALImplementationUnified()
{
}
//////////////////////////////////////////////////////////////////////
CHALImplementationUnified::~CHALImplementationUnified()
{
}
//////////////////////////////////////////////////////////////////////
CString CHALImplementationUnified::GetDriverStr()
{
	return "";
}
//////////////////////////////////////////////////////////////////////
CString CHALImplementationUnified::GetName()
{
	if (m_lpD3DKMTDeviceDesc)
		return m_lpD3DKMTDeviceDesc->DeviceDesc;

	return "";
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::GetLocation(DWORD* lpBus, DWORD* lpDev, DWORD* lpFn)
{
	if (m_lpD3DKMTDeviceDesc)
	{
		if (lpBus)
			*lpBus = m_lpD3DKMTDeviceDesc->Bus;

		if (lpDev)
			*lpDev = m_lpD3DKMTDeviceDesc->Dev;

		if (lpFn)
			*lpFn = m_lpD3DKMTDeviceDesc->Fn;

		return TRUE;
	}

	return FALSE;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsIntelGpu()
{
	if (m_lpD3DKMTDeviceDesc)
		return (m_lpD3DKMTDeviceDesc->VendorID == 0x8086);

	return FALSE;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsCoreClockReportingSupported()
{
	return FALSE;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsMemoryClockReportingSupported()
{
	return FALSE;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCurrentCoreClock()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCurrentMemoryClock()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsCoreVoltageReportingSupported()
{
	return FALSE;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsMemoryVoltageReportingSupported()
{
	return FALSE;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCurrentCoreVoltage()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCurrentMemoryVoltage()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCoreTemperatureSensorCount()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetMemoryTemperatureSensorCount()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetVRMTemperatureSensorCount()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
LONG CHALImplementationUnified::GetCurrentCoreTemperature(int index)
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
LONG CHALImplementationUnified::GetCurrentMemoryTemperature(int index)
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
LONG CHALImplementationUnified::GetCurrentVRMTemperature(int index)
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetFanCount()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsFanSpeedReportingSupported(int index)
{
	return FALSE;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsFanSpeedRPMReportingSupported(int index)
{
	return FALSE;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCurrentFanSpeed(int index)
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCurrentFanSpeedRPM(int index)
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsGraphicsEngineUsageReportingSupported()
{
	return TRUE;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsMemoryControllerUsageReportingSupported()
{
	return FALSE;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsVideoEngineUsageReportingSupported()
{
	if (IsIntelGpu())
		return TRUE;

	return FALSE;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsBusUsageReportingSupported()
{
	return FALSE;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCurrentGraphicsEngineUsage()
{
	return GetD3DKMTGpuUsage(1);
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCurrentMemoryControllerUsage()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCurrentVideoEngineUsage()
{
	if (IsIntelGpu())
		return GetD3DKMTGpuUsage(2);

	return 0;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCurrentBusUsage()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsVideomemoryUsageReportingSupported()
{
	return TRUE;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetTotalVideomemory()
{
	if (IsIntelGpu())
		return GetD3DKMTTotalVideomemory(TRUE, FALSE);

	return GetD3DKMTTotalVideomemory(FALSE, TRUE);
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCurrentVideomemoryUsage()
{
	if (IsIntelGpu())
		return GetD3DKMTVideomemoryUsage(TRUE, FALSE, 0);

	return GetD3DKMTVideomemoryUsage(FALSE, TRUE, 0);
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsRelPowerReportingSupported()
{
	return FALSE;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsAbsPowerReportingSupported()
{
	return FALSE;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCurrentRelPower()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetCurrentAbsPower()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsEffectiveCoreClockReportingSupported()
{
	return FALSE;
}
//////////////////////////////////////////////////////////////////////
BOOL CHALImplementationUnified::IsEffectiveMemoryClockReportingSupported()
{
	return FALSE;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetEffectiveCoreClock()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
DWORD CHALImplementationUnified::GetEffectiveMemoryClock()
{
	return 0;
}
//////////////////////////////////////////////////////////////////////
